worker_processes 1;
pid /var/run/nginx.pid;
error_log /dev/stdout info;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    access_log /dev/stdout;
    sendfile on;
    keepalive_timeout 65;
    
    # Extract ingress path from header
    map $http_x_ingress_path $ingress_path {
        default "";
        "~^(.+)$" $1;
    }
    
    server {
        listen 8089;
        server_name _;
        
        # Set client body size to handle uploads
        client_max_body_size 100M;
        
        # Determine if we're using ingress
        set $use_ingress "0";
        if ($http_x_ingress_path != "") {
            set $use_ingress "1";
        }
        
        location / {
            # Proxy to ARM running on port 8090
            proxy_pass http://127.0.0.1:8090;
            
            # Required headers for WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Forward original headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Pass ingress path to application
            proxy_set_header X-Ingress-Path $http_x_ingress_path;
            
            # Rewrite Location headers for redirects
            proxy_redirect ~^(.+)$ $ingress_path$1;
            
            # Rewrite HTML content to add ingress path prefix to assets
            # This handles href="/...", src="/...", action="/..."
            sub_filter 'href="/' 'href="$ingress_path/';
            sub_filter 'src="/' 'src="$ingress_path/';
            sub_filter 'action="/' 'action="$ingress_path/';
            sub_filter 'url(/' 'url($ingress_path/';
            sub_filter 'url("/' 'url("$ingress_path/';
            sub_filter "url('/" "url('$ingress_path/";
            sub_filter_once off;
            # text/html is filtered by default, only need to add CSS and JS
            sub_filter_types text/css application/javascript;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Disable buffering for sub_filter to work
            proxy_buffering off;
        }
    }
}
